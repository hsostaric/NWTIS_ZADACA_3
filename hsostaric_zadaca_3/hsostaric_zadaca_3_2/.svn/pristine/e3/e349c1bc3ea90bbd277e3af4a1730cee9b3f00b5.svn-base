/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.foi.nwtis.hsostaric.ejb.sb;

import javax.ejb.LocalBean;
import javax.ejb.Stateless;
import javax.inject.Inject;
import javax.servlet.ServletContext;
import org.foi.nwtis.hsostaric.ejb.eb.Airports;
import org.foi.nwtis.rest.klijenti.OWMKlijent;
import org.foi.nwtis.rest.podaci.Lokacija;
import org.foi.nwtis.rest.podaci.MeteoPodaci;

/**
 *
 * @author Hrvoje-PC
 */
@Stateless
public class Meteorolog {


    private OWMKlijent klijent;
    private MeteoPodaci meteoPodaci= new MeteoPodaci();
    private String apiKeyOWM;

    private void dohvatiMeteoPodatke(Airports aerodrom) {
        klijent = new OWMKlijent(apiKeyOWM);
        String koordinate = aerodrom.getCoordinates();
        String polje[] = koordinate.split(",");
        Lokacija lokacija = new Lokacija();
        lokacija.setLatitude(polje[1]
                .trim());
        lokacija.setLongitude(polje[0]
                .trim());
        meteoPodaci = klijent.getRealTimeWeather(lokacija.getLatitude(),
                lokacija.getLongitude());
    }

    public String dohvatiTemperaturu(String apiKeyOWM, Airports aerodrom) {
        this.apiKeyOWM = apiKeyOWM;
        System.out.println("APi kljuƒç je :"+apiKeyOWM);
        dohvatiMeteoPodatke(aerodrom);
        return meteoPodaci.getTemperatureValue()
                .toString()+" "+meteoPodaci.getTemperatureUnit();
    }
    public String dohvatiVlagu(String apiKeyOWM, Airports aerodrom) {
        this.apiKeyOWM = apiKeyOWM;
        dohvatiMeteoPodatke(aerodrom);
        return meteoPodaci.getHumidityValue()
                .toString()+" "+meteoPodaci.getHumidityUnit();
    }

}
